version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  consumer:
    build:
      context: ./api
      target: api_platform_php
    entrypoint: docker-php-entrypoint
    command: bin/console messenger:consume
    depends_on:
      - database
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'ps', 'aux', '|', 'egrep', '"\d+:\d+ php bin/console messenger:consume"']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  pwa:
    build:
      context: ./pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://ws.taciclei.com
      NEXT_PUBLIC_ENTRYPOINT: http://ws.taciclei.com

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      #- pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-ws.taciclei.com, ws.taciclei.com:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp
  database:
      image: percona:5.7
      environment:
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-nopassword}
          - MYSQL_DATABASE=sylius_${APP_ENV}
          - MYSQL_USER=${MYSQL_USER:-sylius}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD:-nopassword}
      volumes:
          - db_data:/var/lib/mysql:rw
          # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
           #- ./api/docker/mysql/data:/var/lib/mysql:rw,delegated
      ports:
          - "3306:3306"
volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:
